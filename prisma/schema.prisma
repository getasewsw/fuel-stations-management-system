generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  password      String
  emailVerified DateTime?
  image         String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model FuelStation {
  id            Int         @id @default(autoincrement())
  merchantId    String      @map("merchant_id")
  name          String
  zone          String
  woreda        String
  kebele        String
  city          String
  regionId      Int         @map("region_id")
  fuelCompanyId Int         @map("fuel_company_id")
  known_name    String?     @map("known_name")
  latitude      Float?      @map("latitude")
  longitude     Float?      @map("longitude")
  createdAt     DateTime    @default(now()) @map("created_at")
  updatedAt     DateTime    @updatedAt @map("updated_at")
  isDeleted     Boolean     @default(false) @map("is_deleted")
  FuelPrice     FuelPrice[]
  fuelCompany   FuelCompany @relation(fields: [fuelCompanyId], references: [id])
  region        Region      @relation(fields: [regionId], references: [id])

  @@map("fuel_station")
}

model Region {
  id           Int           @id @default(autoincrement())
  code         String        @unique
  name         String
  fuelStations FuelStation[]
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt

  @@map("region")
}

model FuelCompany {
  id           Int           @id @default(autoincrement())
  code         String        @unique
  name         String
  fuelStations FuelStation[]
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt

  @@map("fuel_company")
}

model FuelPrice {
  id            Int         @id @default(autoincrement())
  fuelStationId Int         @map("fuel_station_id")
  gasolinePrice Float?      @map("gasoline_price")
  gasoilPrice   Float?      @map("gasoil_price")
  lfoPrice      Float?      @map("lfo_price")
  hfoPrice      Float?      @map("hfo_price")
  kerosenePrice Float?      @map("kerosene_price")
  startDate     DateTime?   @map("start_date")
  endDate       DateTime?   @map("end_date")
  createdAt     DateTime    @default(now()) @map("created_at")
  updatedAt     DateTime    @updatedAt @map("updated_at")
  isDeleted     Boolean     @default(false) @map("is_deleted")
  fuelStation   FuelStation @relation(fields: [fuelStationId], references: [id])
  FuelType      FuelType?   @relation(fields: [fuelTypeId], references: [id])
  fuelTypeId    Int?

  @@map("fuel_price")
}

model FuelType {
  id         Int         @id @default(autoincrement())
  code       String      @unique
  name       String
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
  fuelPrices FuelPrice[]
}
